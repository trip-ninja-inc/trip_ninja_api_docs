openapi: "3.0.0"

info:
  version: "2.22.0"
  title: Trip Ninja Endpoint Documentation
  description: |
    <h2>Introduction</h2>
    Trip Ninja uses a REST API with requests and responses in JSON format. For development and testing, the pre-production servers
    are to be used. Once ready for live use, access to the production servers will be provided. All search endpoints have both production
    and pre-production endpoints - these correspond to the GDS’s production and pre-production services, and can be used as desired.<br  />
    <h2>Trip Ninja API URLs</h2>

    Pre-Production: http://trip-ninja-api-preprod.us-east-2.elasticbeanstalk.com

    For security, Trip Ninja’s servers are only accessible from whitelisted IPs. Please contact your account manager to whitelist IPs you
    will be using.

    Before you start ensure that:<br  />
        - IP addresses have been provided to be whitelisted for our servers.<br  />
        - PCC / OfficeID emulation via Trip Ninja’s PCC/OfficeID has been set up.<br  />
        - API username and password have been provided by Trip Ninja.<br  />

    <h2>Authentication</h2>
    Trip Ninja uses Basic Authentication standards. Simply encode your username and password string using base64 and pass it in the
    authorization headers. See the python example below on how this is done. In the example, the payload and API endpoint url are not
    shown.

    Python Example:

    <pre>
    import base64
    auth = base64.b64encode("USERNAME:PASSWORD")
    headers = {
        'authorization': "Basic "+ auth,
    }
    response = requests.post(url, headers=headers, data=json.dumps(payload))
    </pre>

  x-logo:
    url: 'https://s3.amazonaws.com/tn-api-docs/tripninja_logo_dev-01.png'
    altText: Trip Ninja logo

servers:
  - url: http://trip-ninja-api-preprod.us-east-2.elasticbeanstalk.com
    description: Pre-Production server

paths:
    /price/:
        post:
            summary: "Price Confirmation"
            description: Once the desired flights have been selected, call the price confirm endpoint to confirm their availability and prices.
            operationId: PriceConfirm
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PriceConfirmRequest'

            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PriceConfirmResponse'
                400:
                    description: Unable to confirm trip pricing
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: 400-100
                                    error_details:
                                        type: array
                                        example: ['Failed segment: 4389048309dfhsjnc3420']

    /book/:
        post:
            summary: "Create Booking"
            description: "When a trip is to be booked, send a request to the endpoint /book/ to create the Universal Record and associated PNR's for the trip. The booking can then be placed on the agency's ticketing queue."
            operationId: "CreateBooking"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateBookingRequest'
            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        description: Status message
                                        example: Booking successfully created
                                    ur_locator_code: 
                                        type: string
                                        description: Unique Identifier of a Universal Record.   
                                        example: 6D6RMG
                400:
                    description: Unable to create booking
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: 400-121
                                    error_details:
                                        type: array
                                        example: ['Could not create PNR for trip 129a4045ef84edc4c0d5f0b1b28a906495d3f966'] 

        get:
            summary: "List Bookings"
            description: "Get a list of all bookings for a PCC, travel agency, or agent."
            operationId: "ListBooking"
            requestBody:
                content:
                    application/json:
                            schema:
                                $ref: '#/components/schemas/ListBookingRequest'

            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListBookingResponse'
                400:
                    description: Unable to get bookings
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: 400-122
                                    error_details:
                                        type: array
                                        example: ['Invalid PCC entered']   

                                                                       

        delete:
            summary: "Cancel Booking"
            description: "To cancel a booking, send a request with the trip_id and ur_locator_code."
            operationId: "CancelBooking"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CancelRequest'
            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: "Trip with Universal Record locator XY34Z4 successfully cancelled"
                400:
                    description: Unable to cancel booking
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: 400-111
                                    error_details:
                                        type: array
                                        example: ['Could not find record matching locator code UX345SE'] 
    /ticket/:
        post:
            summary: "Add To Ticketing Queue"
            description: If a trip has been booked, but not yet added to the agency ticketing queue, use this endpoint to add it to their queue.
            operationId: AddBookingToTicketingQueue
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddBookingToTicketingQueueRequest'

            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: "Trip with Universal Record locator XY34Z4 successfully added to queue 01"

                400:
                    description: Unable to add trip to ticketing queue
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: 400-111
                                    error_details:
                                        type: array
                                        example: ['Could not find record matching locator code UX345SE']         



components:
  schemas:
    PriceConfirmResponse:
      title: Response
      type: object
      properties:
        trip_id:
            description: A unique key used for identification and when booking a trip.
            type: string
            example: "129a4045ef84edc4c0d5f0b1b28a906495d3f966"
        pricing:
                description: Breakdown of the total confirmed prices including taxes, fees, and markup for the trip.
                type: object
                $ref: '#/components/schemas/trip_pricing_breakdown'
        itinerary:
            $ref: '#/components/schemas/itinerary_response'


    baggage:
        type: object
        description: Details of carryon and checked baggage allowances
        properties:
            applicable_bags:
                type: string
                description:
                example: "1stChecked"
            applicable_carryon_bags:
                type: string
                description:
                example: "1"
            baggage_cost:
                type: float
                description:
                example: 30.00
            baggage_restrictions:
                type: string
                description:
                example: "UPTO50LB/23KG AND UPTO62LI/158LCM"
            carryon_cost:
                type: float
                description:
                example: 0.00
            carryon_restrictions:
                type: string
                description:
                example: "CARRYON HAND BAGGAGE ALLOWANCE"
    flight_details:
        type: array
        description: Details of services, meals, terminals for each flight in the segment
        items:
            type: object
            properties:
                flight_number:
                    type: string
                    description: Flight number
                    example: "WS368"
                in_flight_services:
                    type: array
                    description: List of services offered on flight
                    example: ["Entertainment on Demand", "Wi-Fi", "USB Power"]
                meals:
                    type: array
                    description: Details of meals available on flight
                    example: ["FoodForPurchase"]
                origin_terminal:
                    type: string
                    description: Terminal from which the flight departs
                    example: 1
                destination_terminal:
                    type: string
                    description: Terminal at which the flight arrives
                    example: 3
                automated_checkin:
                    type: boolean
                    description:
                    example: false
                on_time_performance:
                    type: string
                    description:
                    example:


    trip_pricing_breakdown:
        allOf:
          - $ref: '#/components/schemas/PriceConfirmResponse/properties'
          - type: object
            description: Breakdown of confirmed prices including taxes, fees, and markup for the trip.
            properties:
                confirmed_total_price:
                    type: float
                    description: Total price of the trip after price confirmation (airfare + taxes + fees). Does not include markup.
                    example: 455.68
                original_total_price:
                    type: float
                    description: Original price of trip from search request - does not include markup.
                    example: 455.61
                airfare:
                    type: float
                    description: Confirmed airfare price for the trip.
                    example: 370.04
                taxes:
                    type: float
                    description: Confirmed taxes for the trip.
                    example: 85.64
                fees:
                    type: float
                    description: Confirmed fees for trip *Travelport customers only*
                    example: 0.0
                markup:
                    type: float
                    description: Trip Ninja provided markup amount
                    example: 20.00
                currency:
                    type: string
                    description: Currency in which trip was priced
                    example: USD

    segment_pricing_breakdown:
        allOf:
          - $ref: '#/components/schemas/PriceConfirmResponse/properties'
          - type: object
            description: Breakdown of confirmed prices including taxes, and fees for the segment.
            properties:
                confirmed_total_price:
                    type: float
                    description: Total price of the segment after price confirmation (airfare + taxes + fees). Does not include markup.
                    example: 105.68
                original_total_price:
                    type: float
                    description: Original price of segment from search request - does not include markup.
                    example: 100.61
                airfare:
                    type: float
                    description: Confirmed airfare price for the segment.
                    example: 70.04
                taxes:
                    type: float
                    description: Confirmed taxes for the segment.
                    example: 30.64
                fees:
                    type: float
                    description: Confirmed fees for segment *Travelport customers only*
                    example: 0.0


    segment_type:
        type: string
        enum: [one_way, open_jaw]
        description: "Type of flight"
    data_source:
        description: Data Source to call.
        required: true
        type: string
        enum: [amadeus, travelport]
        example: amadeus
    credentials:
        type: object
        description: Indicate data source to call and required credentials
        properties:
            data_source:
                $ref: '#/components/schemas/data_source'
            pcc:
                description: PCC/OfficeID to emulate transactions under. Must have emulation enabled for the relevant Service Bureau PCC used by Trip Ninja to conduct queries. Please contact Trip Ninja to get this set up.
                required: true
                type: string
                example: MEL49f839
            provider:
                description: Fare provider to use.<br  />“1V” - Apollo, “1G” - Galileo, “1P” - Worldspan, “1A” - Amadeus
                required: true
                type: string
                example: 1A
            region:
                description: Parameter toggles which travelport regional service endpoint you hit *Travelport Only*
                required: false
                type: string
                example: americas

    itinerary:
        allOf:
          - $ref: #
          - type: array
            description: The itinerary chosen for the trip
            items:
                type: object
                description: The itinerary to be priced
                required:
                    - itinerary_reference
                    - plating_carrier
                    - credentials
                    - segments
                properties:
                    itinerary_reference:
                        type: integer
                        description: itinerary reference id within the itinerary. Always starting from 1
                        example: 1
                    plating_carrier:
                        type: string
                        description: The airline that a ticket will be issued on behalf of.
                        required: true
                        example: "WS"
                    credentials:
                        $ref: '#/components/schemas/credentials'
                    itinerary_type:
                        $ref: '#/components/schemas/segment_type'
                    segments:
                        type: array
                        description: The segments chosen for the trip
                        items:
                            $ref: '#/components/schemas/segment'

    segment:
        type: object
        description: The segment which is a part of an openjaw or a oneway
        required:
            - segment_id
            - segment_type
            - flights
        properties:
            segment_id:
                type: string
                description: Segment_id for the group
                example: "14c9e2e5c95a5bf0f9f7712de24348e6aba88c32"
            flights:
                $ref: '#/components/schemas/flights'

    flights:
        type: object
        description: A list of flights, each flight includes origin, destination, flight number, departure time and arrival time
        required:
            - origin
            - departure_time
            - flight_number
            - destination
            - booking_code
            - carrier
            - key
        properties:
            key:
                type: string
                description: Leg’s string identifier
                required: true
                example: "oHzo6pBAAA/B1d6hPLAAAA=="
            origin:
                type: string
                description: IATA code of the flight origin
                required: true
                example: CDG
            destination:
                type: string
                description: IATA code of the flight destination
                required: true
                example: YUL
            booking_code:
                type: string
                description: The airline booking code that describes the flight cabin class
                required: true
                example: X
            cabin_class:
                type: string
                description: Leg’s cabin class *Travelport customers only*
                example: Economy
            carrier:
                type: string
                description: Leg's carrier code
                required: true
                example: TS
            flight_time:
                type: integer
                description: Flight duration in minutes
                example: 475
            flight_number:
                type: string
                description: Leg's flight number
                required: true
                example: 475
            departure_time:
                type: DateTime
                format: 'yyyy-MM-ddTHH:mm:ssZ'
                description: Departure time of the flight
                required: true
                example: "2019-04-07T13:15:00.000+02:00"
            arrival_time:
                type: DateTime
                description: Arrival time of the flight
                format: 'yyyy-MM-ddTHH:mm:ssZ'
                example: "2019-04-07T15:10:00.000-04:00"
            brand_identifier:
                type: string
                description: Identifier for the brand
                required: true
                example: ECONOFLEX
#----------------------------------------------------------------------------
    itinerary_response:
        allOf:
            - $ref: #
            - type: array
              description: The itinerary chosen for the trip
              items:
                  type: object
                  description: The itinerary to be priced
                  required:
                      - itinerary_reference
                      - plating_carrier
                      - credentials
                      - segments
                  properties:
                      itinerary_reference:
                          type: integer
                          description: itinerary reference id within the itinerary. Always starting from 1
                          example: 1
                      plating_carrier:
                          type: string
                          description: The airline that a ticket will be issued on behalf of.
                          required: true
                          example: "WS"
                      credentials:
                          $ref: '#/components/schemas/credentials'
                      itinerary_type:
                          $ref: '#/components/schemas/segment_type'
                      segments:
                          type: array
                          description: The segments chosen for the trip
                          items:
                              $ref: '#/components/schemas/segment_response'

    segment_response:
        type: object
        description: The segment which is a part of an openjaw or a oneway
        required:
            - segment_id
            - baggage
            - flight_details
        properties:
            segment_id:
                type: string
                description: Segment_id for the group
                example: "14c9e2e5c95a5bf0f9f7712de24348e6aba88c32"
            baggage:
                $ref: '#/components/schemas/baggage'
            flight_details:
                $ref: '#/components/schemas/flight_details'

#----------------------------------------------------------------------------
    PriceConfirmRequest:
      title: Request
      type: object
      required:
          - trip_id
          - trip_type
          - endpoint
          - traveller_list
          - currency
          - price
          - markup
      properties:
        trip_id:
            description: A unique key used for identification and when booking a trip.
            required: true
            type: string
            example: "129a4045ef84edc4c0d5f0b1b28a906495d3f966"
        trip_type:
            description: Trip types, values include "OneWay", "RoundTrip", "FlexTrip" and "FareStructure"
            required: True
            type: string
            enum: [OneWay, RoundTrip, FlexTrip, FareStructure]
            example: OneWay
        endpoint:
            description: Parameter toggles travelport production and pre-production endpoints
            required: true
            type: string
            example: preprod
        traveller_list: 
            description: Array of passenger types, values include ‘ADT’, ’MIL’, ’CHD’ and ‘INF’
            required: true 
            type: array
            example: ["ADT"]        
        currency:
            description: Currency to be used for provider query requests in three digit code.
            example: USD
            required: true
            type: string
        price:
            description: Total price of selected flights, not including markup, in currency specified.
            required: true 
            type: float
            example: 161.23
        markup: 
            description: Markup amount specified by Trip Ninja. This can be found in the trip search response.
            required: true 
            type: float
            example: 0
        itinerary:
            $ref: '#/components/schemas/itinerary'
    
    CancelRequest:
        title: Request
        type: object
        required:
            - trip_id
        properties:
            trip_id:
                type: string
                required: true
                description: Trip ID returned in search response
                example: "6be6e72c60102bd489ac46434d4ac6c11e047ee8"
    
    CreateBookingRequest:
        title: Request
        type: object
        required:
            - trip_id
            - passengers
            - billing
        properties:
            trip_id:
                type: string
                description: A unique key used for identification and when booking a trip.
                required: true                
                example: "129a4045ef84edc4c0d5f0b1b28a906495d3f966"
            add_to_ticketing_queue:
                type: boolean
                example: true
                default: false
                description: Set to True to add booking to agency's ticketing queue
            ticketing_queue:
                type: string
                description: Ticketing queue on which to place the PNR, must be set if add_to_ticketing_queue is True
                example: "01"
            agent_email: 
                description: Email address of the travel agent creating the booking.
                required: false 
                type: string
                example: agent@travelagency.com
            agency:
                description: Travel agency to record the booking under.
                required: false  
                type: string
                example: tripninja
            passengers:
                description: "An array of passenger details."
                required: true
                type: array
                items:
                    type: object
                    required:
                    - first_name
                    - last_name
                    - date_of_birth
                    - gender
                    - phone_number
                    - passenger_type
                    properties:
                        title:
                            type: string
                            description: "The customer's title, values include 'Mr', 'Mrs', 'Ms'"
                            example: "Mr"
                        first_name:
                            type: string
                            required: true
                            description: "The customer's first name."
                            example: FirstName
                        last_name:
                            type: string
                            required: true
                            description: "The customer's last name."
                            example: LastName
                        date_of_birth:
                            type: string
                            required: true
                            description: "The customer's date of birth."
                            example: "2005-03-10"
                        gender: 
                            type: string
                            required: true
                            description: "The single digit code for the customer's gender."
                            example: "M"
                        phone_number:
                            type: string
                            required: true
                            description: "The customer's phone number."
                            example: 9022225555
                        passport_country:
                            type: string
                            description: "The customer's passport country of issue."
                            example: "AZ"
                        passport_number:
                            type: string
                            description: "The customer's passport number."
                            example: "QX12345678"
                        passport_expiration:
                            type: string
                            description: "The customer's passport expiration date."
                            example: "2020-10"
                        passenger_type:
                            type: string
                            required: true
                            description: "The customer's passenger type. Values include 'ADT', 'MIL', 'CHD' and 'INF'."
                            example: "ADT"
            billing:
                type: object
                description: Billing information for the booking.
                required:
                    - email
                properties:
                    email:
                        type: string
                        required: true
                        description: The contact and billing email address.
                        example: email.address@email.com
                    payment_included:
                        type: boolean
                        description: Set to True if payment information is included in booking.
                        default: false
                        example: true
                    payment_info:
                        type: object
                        description: Credit card payment information for booking.
                        properties:
                            card_type:
                                type: string
                                description: The two digit credit card code.
                                example: VI
                            cardholder_name:
                                type: string
                                description: The full name of the cardholder as it appears on the card.
                                example: John David Smith
                            card_number:
                                type: string
                                description: The credit card number.
                                example: 4520000000000000
                            card_cvv:
                                type: string
                                description: The three to four digit card security or CVV code.
                                example: 345
                            card_expiration_date:
                                type: string
                                description: The card's expiry date.
                                example: 2021-10

    AddBookingToTicketingQueueRequest:
        title: Request
        type: object
        required:
            - trip_id
            - queue
        properties:
            trip_id:
                description: A unique key used for identification and when booking a trip.
                required: true
                type: string
                example: "129a4045ef84edc4c0d5f0b1b28a906495d3f966"
            queue:       
                type: string
                description: Ticketing queue on which to place the PNR
                example: "01"
    
    
    ListBookingRequest:
        title: request
        type: object
        required:
           - pcc
           - endpoint
        properties:
            pcc:
                description: PCC/OfficeID to emulate transactions under. Must have emulation enabled for the relevant Service Bureau PCC used by Trip Ninja to conduct queries.
                required: true
                type: string
                example: 2G3C
            endpoint:
                description: Parameter toggles travelport production and pre-production endpoints
                required: true
                type: string
                example: preprod
            agency:
                description: Travel agency for which to list bookings from.
                required: false  
                type: string
                example: tripninja
            agent_email: 
                description: Email address of the travel agent to list bookings from.
                required: false 
                type: string
                example: agent@travelagency.com
    
    ListBookingResponse:
        title: Response
        type: object
        properties:
            bookings:
                type: array
                items:
                    type: object
                    properties:
                        trip_id:
                            description: A unique key used for identification and when booking a trip.
                            type: string
                            example: "129a4045ef84edc4c0d5f0b1b28a906495d3f966"
                        ur_locator_code:       
                            type: string
                            description: Unique Identifier of a Universal Record. 
                            example: "AXY67G"
                        ticketed:       
                            type: boolean
                            description: Notes whether the booking has been ticketed. 
                            example: true
                        trip_type:
                            description: Trip types, values include "OneWay", "RoundTrip", "FlexTrip" and "FareStructure"
                            type: string
                            example: OneWay 
                        pcc:
                            description: PCC/OfficeID to emulate transactions under. Must have emulation enabled for the relevant Service Bureau PCC used by Trip Ninja to conduct queries.
                            type: string
                            example: 2G3C
                        agent_email: 
                            description: Email address of travel agent who created the booking
                            type: string
                            example: agent@tripninja.io
                        booking_date: 
                            description: Date on which the booking was made
                            type: string
                            example: "2019-07-07"
                        departure_date: 
                            description: Date on which the first flight of the trip leaves.
                            type: string
                            example: "2019-11-21"
                        flights: 
                            description: List of all flights segment IATA codes
                            type: array
                            example: ['YHZ-YOW', 'YOW-YYZ', 'YYZ-YHZ']
                        customer_email: 
                            description: Email address of customer
                            type: string
                            example: customer@email.com
                        customer_name: 
                            description: Name of the primary passenger
                            type: string
                            example: customer@email.com
                        total_price: 
                            description: Total price of the trip including all taxes, fees, and markup.
                            type: float
                            example: 399.96
                        currency: 
                            description: Currency in which the booking was made
                            type: string
                            example: CAD
                        payment:       
                            type: boolean
                            description: Notes whether the booking included payment information. 
                            example: true
